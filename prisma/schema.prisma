// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  email     String @unique
  password  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects UsersProject[]
  tasks    Task[]

  team   Team?   @relation(fields: [teamId], references: [id])
  teamId String?
}

enum PRIORITY {
  LOW
  MEDIUM
  HIGH
}

enum STATUS {
  NOT_STARTED
  PENDING
  IN_PROGRESS
  COMPLETED
}

model Task {
  id       String   @id @default(uuid())
  taskName String
  priority PRIORITY
  status   STATUS
  dueDate  DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Project {
  id          String @id @default(uuid())
  projectName String
  description String

  tasks Task[]
  users UsersProject[]
}

model UsersProject {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  project   Project @relation(fields: [projectId], references: [id])
  projectId String
}

model Team {
  id       String @id @default(uuid())
  teamName String

  teamMembers User[]
}
